@model crmcsharp.Models.entity.TicketHisto

@{
    Layout = "_Layout";
    ViewData["Title"] = "Détails du ticket";
}

<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mt-4">
            <i class="fas fa-ticket-alt me-2"></i>Détails du ticket #@Model.Id
        </h2>
        <a asp-action="Index" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Retour à la liste
        </a>
    </div>

    @if (TempData["Message"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i> @TempData["Message"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-circle me-2"></i> @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light">
            <h5 class="card-title mb-0">
                <i class="fas fa-info-circle me-2"></i>Informations générales
            </h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4 text-muted">Sujet</dt>
                        <dd class="col-sm-8 fw-bold">@Model.Subject</dd>

                        <dt class="col-sm-4 text-muted">Description</dt>
                        <dd class="col-sm-8">@Model.Description</dd>

                        <dt class="col-sm-4 text-muted">Statut</dt>
                        <dd class="col-sm-8">
                            <span class="badge @GetStatusBadgeClass(Model.Status)">
                                @Model.Status
                            </span>
                        </dd>
                    </dl>
                </div>
                <div class="col-md-6">
                    <dl class="row">
                        <dt class="col-sm-4 text-muted">Priorité</dt>
                        <dd class="col-sm-8">
                            <span class="badge @GetPriorityBadgeClass(Model.Priority)">
                                @Model.Priority
                            </span>
                        </dd>

                        <dt class="col-sm-4 text-muted">Date création</dt>
                        <dd class="col-sm-8">@Model.CreatedAt.ToString("dd/MM/yyyy HH:mm")</dd>

                        <dt class="col-sm-4 text-muted">Date suppression</dt>
                        <dd class="col-sm-8">@(Model.DeleteAt?.ToString("dd/MM/yyyy HH:mm") ?? "Non supprimé")</dd>
                    </dl>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm mb-4">
        <div class="card-header bg-light">
            <h5 class="card-title mb-0">
                <i class="fas fa-users me-2"></i>Personnes concernées
            </h5>
        </div>
        <div class="card-body">
            <div class="row">
                <div class="col-md-4">
                    <div class="mb-3">
                        <h6 class="text-muted">Manager</h6>
                        <p class="fw-bold">@Model.Manager?.Username</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <h6 class="text-muted">Employé</h6>
                        <p class="fw-bold">@Model.Employee?.Username</p>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="mb-3">
                        <h6 class="text-muted">Client</h6>
                        <p class="fw-bold">@Model.Customer?.Name</p>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Section Dépense -->
    <div class="card shadow-sm">
        <div class="card-header bg-light">
            <h5 class="card-title mb-0">
                <i class="fas fa-money-bill-wave me-2"></i>Dépense associée
            </h5>
        </div>
        <div class="card-body">
            @if (ViewBag.LatestExpense != null)
            {
                <div class="row">
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4 text-muted">Montant</dt>
                            <dd class="col-sm-8 fw-bold">@ViewBag.LatestExpense.Amount €</dd>
                        </dl>
                    </div>
                    <div class="col-md-6">
                        <dl class="row">
                            <dt class="col-sm-4 text-muted">Date création</dt>
                            <dd class="col-sm-8">@ViewBag.LatestExpense.CreatedAt.ToString("dd/MM/yyyy HH:mm")</dd>
                        </dl>
                    </div>
                </div>
                <div class="mt-3">
                    <a class="btn btn-warning" asp-controller="TicketExpense" asp-action="Edit" asp-route-id="@ViewBag.LatestExpense.Id" asp-route-ticketId="@ViewBag.LatestExpense.TicketHisto.Id">
                        <i class="fas fa-edit me-1"></i> Modifier la dépense
                    </a>
                </div>
            }
            else
            {
                <div class="alert alert-info">
                    <i class="fas fa-info-circle me-2"></i> Aucune dépense trouvée pour ce ticket.
                </div>
            }
        </div>
    </div>
</div>

@functions {
    string GetStatusBadgeClass(string status)
    {
        return status switch
        {
            "Ouvert" => "bg-success",
            "En cours" => "bg-warning text-dark",
            "Fermé" => "bg-secondary",
            "En attente" => "bg-info",
            _ => "bg-primary"
        };
    }

    string GetPriorityBadgeClass(string priority)
    {
        return priority switch
        {
            "Haute" => "bg-danger",
            "Moyenne" => "bg-warning text-dark",
            "Basse" => "bg-success",
            _ => "bg-primary"
        };
    }
}